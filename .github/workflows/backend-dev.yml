name: Flask Backend CI - Dev
on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]
jobs:
  backend-ci:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      working-directory: ./backend
      run: |
        pip install -r requirements.txt
        pip install ruff pytest
    - name: Lint with ruff
      working-directory: ./backend
      run: |
        ruff check .
    - name: Run unit tests (pytest)
      working-directory: ./backend
      run: |
        pytest
 
  backend-cd:
    runs-on: ubuntu-latest
    environment: dev
    needs: backend-ci
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ steps.auth.outputs.project_id }}
      - name: Configure Docker
        run: |
          gcloud auth configure-docker europe-west1-docker.pkg.dev --project=${{ steps.auth.outputs.project_id }} --quiet
      - name: Get Cloud SQL Connection Name
        run: |
          INSTANCE_ID=$(echo "${{ secrets.CLOUD_SQL_INSTANCE_ID_DEV }}" | cut -d':' -f3)
          INSTANCE_CONNECTION_NAME=$(gcloud sql instances describe "$INSTANCE_ID" --project "${{ secrets.GCP_PROJECT_ID }}" --format='value(connectionName)')
          echo "CLOUD_SQL_CONNECTION_NAME=$INSTANCE_CONNECTION_NAME" >> $GITHUB_ENV
      - name: Install Cloud SQL Proxy
        run: |
          wget https://storage.googleapis.com/cloudsql-proxy/v1.33.3/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
          chmod +x cloud_sql_proxy
      - name: Start Cloud SQL Proxy
        run: |
          ./cloud_sql_proxy -instances="${{ env.CLOUD_SQL_CONNECTION_NAME }}=tcp:127.0.0.1:3306" &
          echo "Cloud SQL Proxy started in the background"
          sleep 5 # Give the proxy a moment to start
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install Flask-Migrate
      - name: Configure Flask Environment
        working-directory: ./backend
        run: |
          echo "FLASK_ENV=development" >> $GITHUB_ENV
          echo "DEV_DB_USER=${{ secrets.CLOUD_SQL_USERNAME_DEV }}" >> $GITHUB_ENV
          echo "DEV_DB_PASS=${{ secrets.CLOUD_SQL_PASSWORD_DEV }}" >> $GITHUB_ENV
          echo "DEV_DB_HOST=127.0.0.1" >> $GITHUB_ENV
          echo "DEV_DB_PORT=3306" >> $GITHUB_ENV
          echo "DEV_DB_NAME=${{ secrets.CLOUD_SQL_DATABASE_DEV }}" >> $GITHUB_ENV
      - name: Run Flask Migrations
        working-directory: ./backend
        run: |
          flask db upgrade
      - name: Build Docker Image
        working-directory: ./backend
        run: |
          docker build -t europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/fintrack-ar-dev-weu/fintrack-dev:${GITHUB_SHA::8} .
          echo "DOCKER_IMAGE=europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/fintrack-ar-dev-weu/fintrack-dev:${GITHUB_SHA::8}" >> $GITHUB_ENV
      - name: Push Docker Image to Artifact Registry
        run: |
          docker --debug push ${{ env.DOCKER_IMAGE }}
      
      # New steps for Cloud Run deployment
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2.7.3
        with:
          service: fintrack-dev-backend
          region: europe-west1
          image: ${{ env.DOCKER_IMAGE }}
          flags: |
            --allow-unauthenticated
            --port=8080
            --cpu=2
            --memory=4Gi
            --concurrency=80
            --max-instances=1
            --min-instances=0
            --cpu-throttling
            --add-cloudsql-instances=${{ env.CLOUD_SQL_CONNECTION_NAME }}
          env_vars: |
            FLASK_ENV=development
          secrets: |
            DEV_AUTH0_CLIENT_ID=dev_auth0_client_id:latest
            DEV_AUTH0_CLIENT_SECRET=dev_auth0_client_secret:latest
            DEV_AUTH0_DOMAIN=dev_auth0_domain:latest
            DEV_AUTH0_API_AUDIENCE=dev_auth0_api_audience:latest
            DEV_CACHE_TYPE=dev_cache_type:latest
            DEV_CACHE_REDIS_SSL=dev_cache_redis_ssl:latest
            DEV_CACHE_DEFAULT_TIMEOUT=dev_cache_default_timeout:latest
            DEV_CACHE_ALGORITHMS=dev_cache_algorithms:latest
            DEV_CACHE_USER=dev_cache_user:latest
            DEV_CACHE_PASS=dev_cache_pass:latest
            DEV_CACHE_HOST=dev_cache_host:latest
            DEV_CACHE_PORT=dev_cache_port:latest
            DEV_DB_USER=dev_db_user:latest
            DEV_DB_PASS=dev_db_pass:latest
            DEV_DB_HOST=dev_db_host:latest
            DEV_DB_PORT=dev_db_port:latest
            DEV_DB_NAME=dev_db_name:latest
            
      - name: Show Cloud Run URL
        run: |
          echo "Deployed to: ${{ steps.deploy.outputs.url }}"